import os
import textwrap
from typing import List, Tuple, Union, Optional

import paramiko


def find_flags(ssh: paramiko.SSHClient, base_dir='/root') -> List[Tuple[str, str]]:
    search_glob = os.path.join(base_dir, '*flag*')

    _, stdout, stderr = ssh.exec_command('ls {}'.format(search_glob))

    files = []
    found = []
    for line in stdout.read().splitlines():
        files.append(line.decode('utf-8'))

    for file in files:
        contents = get_file_contents(ssh, file)
        if 10 < len(contents) < 60:
            found.append((file, contents))

    return found


def get_file_contents(ssh: paramiko.SSHClient, file: str) -> Union[str, bool]:
    """
    Retrieve the contents of file from the remote server.

    This does ***NOT*** use SFTP since teams might disallow SFTP. Granted if you are
    smart enough to disallow SFTP, you probably don't have default creds either, but
    sometimes people mess up.
    """
    _, stdout, stderr = ssh.exec_command('cat {}'.format(file))
    err = stderr.read()
    if len(err) > 0:
        return False

    return stdout.read().decode('utf-8').strip()


def _run_command(ssh: paramiko.SSHClient, command: str) -> str:
    _, stdout, _ = ssh.exec_command(command)
    return stdout.read().decode('utf-8').strip()


def get_system_info(ssh: paramiko.SSHClient) -> str:
    hostname = _run_command(ssh, 'hostname -f')
    uname = _run_command(ssh, 'uname -a')
    lsb_release = _run_command(ssh, 'lst_release -a')
    whoami = _run_command(ssh, 'whoami')

    sysinfo = [
        'Hostname: {}'.format(hostname),
        'Username: {}'.format(whoami),
        'Uname: {}'.format(uname),
    ]

    if len(lsb_release) > 0:
        sysinfo.append('LSB Release:\n{}'.format(textwrap.indent(lsb_release, ' > ')))
    return '\n'.join(sysinfo)
